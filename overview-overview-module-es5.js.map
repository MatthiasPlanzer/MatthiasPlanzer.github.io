{"version":3,"sources":["webpack:///src/app/overview/overview.page.html","webpack:///src/app/overview/overview-routing.module.ts","webpack:///src/app/overview/overview.module.ts","webpack:///src/app/overview/overview.page.scss","webpack:///src/app/overview/overview.page.ts"],"names":["routes","path","component","OverviewPageRoutingModule","imports","forChild","exports","OverviewPageModule","providers","declarations","OverviewPage","productsService","viewTimespan","Object","updateProducts","productSubscription","productListChange","subscribe","console","log","asyncProductRange","getProductsByTimespan","then","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAJrC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOAI,kBAAkB;AAAA;AAAA,O;;AAAlBA,wBAAkB,6DAZ9B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kFAJO,CADD;AAORI,iBAAS,EAAE,CACT,iEADS,CAPH;AAURC,oBAAY,EAAE,CAAC,2DAAD;AAVN,OAAT,CAY8B,GAAlBF,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACvBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCUFG,YAAY;AAMvB,8BAAmBC,eAAnB,EAAqD;AAAA;;AAAlC,eAAAA,eAAA,GAAAA,eAAA;AALZ,eAAAC,YAAA,GAAe,CAAf;AACA,eAAAC,MAAA,GAASA,MAAT;AAKL,eAAKC,cAAL;AACA,eAAKC,mBAAL,GAA2BJ,eAAe,CAACK,iBAAhB,GAAoCC,SAApC,CACzBC,OAAO,CAACC,GADiB,CAEzB;AAFyB,WAA3B;AAID;;AAZsB;AAAA;AAAA,2CAcN;AACf,iBAAKC,iBAAL,GAAyB,KAAKT,eAAL,CAAqBU,qBAArB,CAA2C,KAAKT,YAAhD,CAAzB;AACA,iBAAKQ,iBAAL,CAAuBE,IAAvB,CAA4BJ,OAAO,CAACC,GAApC;AACD;AAjBsB;AAAA;AAAA,qCAmBZ,CACV;AApBsB;;AAAA;AAAA,S;;;;gBAPhB;;;;AAOIT,kBAAY,6DALxB,gEAAU;AACTa,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,kGAFS;;;;AAAA,OAAV,CAKwB,GAAZd,YAAY,CAAZ","file":"overview-overview-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Übersicht</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list *ngIf=\\\"asyncProductRange | async; let productRange\\\">\\n    <ion-item-group *ngFor=\\\"let currentTimespan of productRange; index as i\\\">\\n      <ion-item-divider>\\n        <h1>{{ currentTimespan.range }}</h1>\\n      </ion-item-divider>\\n\\n      <ion-label *ngFor=\\\"let product of currentTimespan.items; index as i\\\">\\n        <ion-item>\\n          <ion-avatar slot=\\\"start\\\">\\n            <img src=\\\"{{ product.image_url}}\\\" />\\n          </ion-avatar>\\n          <h2>{{ product.product_name }}</h2>\\n        </ion-item>\\n        <ion-item>\\n          <table class=\\\"table\\\">\\n            <thead>\\n              <tr>\\n                <th>Nährwert</th>\\n                <th>Menge</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr>\\n                <td>Kohlenhydrate</td>\\n                <td>{{ product.nutriments.carbohydrates }}</td>\\n              </tr>\\n              <tr>\\n                <td>davon Zucker</td>\\n                <td>{{ product.nutriments.fat }}</td>\\n              </tr>\\n              <tr>\\n                <td>Energie</td>\\n                <td>\\n                  {{ product.nutriments.energy }}kJ / {{\\n                  product.nutriments['energy-kcal'] }}kJ\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>Fett</td>\\n                <td>{{ product.nutriments.fat }}</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </ion-item>\\n      </ion-label>\\n    </ion-item-group>\\n    <ion-item *ngIf=\\\"productRange.length === 0\\\"\\n      >Keine Produkte hinzugefügt.</ion-item\\n    >\\n  </ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OverviewPage } from './overview.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OverviewPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OverviewPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OverviewPageRoutingModule } from './overview-routing.module';\n\nimport { OverviewPage } from './overview.page';\nimport { ProductsService } from '../products.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OverviewPageRoutingModule\n  ],\n  providers: [\n    ProductsService\n  ],\n  declarations: [OverviewPage]\n})\nexport class OverviewPageModule {}\n","export default \"h2 {\\n  margin-bottom: 0;\\n  margin-left: 0;\\n  color: #000;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3ZlcnZpZXcvb3ZlcnZpZXcucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQUE7RUFDQSxjQUFBO0VBQ0EsV0FBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvb3ZlcnZpZXcvb3ZlcnZpZXcucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDIge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgY29sb3I6ICMwMDA7XG59Il19 */\";","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { IProduct } from '../data/iproduct';\nimport { ProductsService } from '../products.service';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.page.html',\n  styleUrls: ['./overview.page.scss'],\n})\nexport class OverviewPage implements OnInit {\n  public viewTimespan = 0;\n  public Object = Object;\n\n  asyncProductRange: Promise<Array<any>>; // Promise<Array<IProduct[]>>;\n  productSubscription: Subscription;\n  constructor(public productsService: ProductsService) {\n    this.updateProducts();\n    this.productSubscription = productsService.productListChange().subscribe(\n      console.log\n      // this.productsService.getProductsByTimespan.bind(this, this.viewTimespan)\n    );\n  }\n\n  updateProducts() {\n    this.asyncProductRange = this.productsService.getProductsByTimespan(this.viewTimespan);\n    this.asyncProductRange.then(console.log);\n  }\n\n  ngOnInit() {\n  }\n}\n"]}