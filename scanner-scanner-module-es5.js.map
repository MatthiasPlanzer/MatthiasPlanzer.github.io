{"version":3,"sources":["webpack:///src/app/add-product/add-product.component.html","webpack:///src/app/scanner/scanner.page.html","webpack:///src/app/add-product/add-product.component.scss","webpack:///src/app/add-product/add-product.component.ts","webpack:///src/app/scanner/scanner-routing.module.ts","webpack:///src/app/scanner/scanner.module.ts","webpack:///src/app/scanner/scanner.page.scss","webpack:///src/app/scanner/scanner.page.ts"],"names":["AddProductComponent","modalController","console","log","code","dismiss","selector","template","routes","path","component","ScannerPageRoutingModule","imports","forChild","exports","ScannerPageModule","declarations","ScannerPage","modalOpen","currentDevice","formatsEnabled","CODE_128","DATA_MATRIX","EAN_13","QR_CODE","tryHarder","modal","create","componentProps","qrResultString","present","onWillDismiss","data","devices","availableDevices","hasDevices","Boolean","length","resultString","generateModal","selected","device","find","x","deviceId","has","hasPermission"],"mappings":"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","file":"scanner-scanner-module-es5.js","sourcesContent":["export default \"<ion-header translucent>\\n  <ion-toolbar>\\n    <ion-title>Modal Content</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"dismissModal()\\\">Close</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n</ion-content>\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Barcode-Scanner</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <zxing-scanner [(device)]=\\\"currentDevice\\\" (scanSuccess)=\\\"onCodeResult($event)\\\"\\n  [formats]=\\\"formatsEnabled\\\" [tryHarder]=\\\"tryHarder\\\" (permissionResponse)=\\\"onHasPermission($event)\\\"\\n  (camerasFound)=\\\"onCamerasFound($event)\\\"></zxing-scanner>\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1wcm9kdWN0L2FkZC1wcm9kdWN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.scss'],\n})\nexport class AddProductComponent implements OnInit {\n  @Input() code: string;\n  constructor(public modalController: ModalController) { }\n\n  ngOnInit() {\n    console.log(this.code);\n  }\n  dismissModal() {\n    if (this.modalController) {\n      this.modalController.dismiss({\n      });\n    }\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { ScannerPage } from \"./scanner.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ScannerPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ScannerPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { ScannerPageRoutingModule } from \"./scanner-routing.module\";\n\nimport { ScannerPage } from \"./scanner.page\";\nimport { ZXingScannerModule } from \"@zxing/ngx-scanner\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ScannerPageRoutingModule,\n    ZXingScannerModule,\n  ],\n  declarations: [ScannerPage],\n})\nexport class ScannerPageModule {}\n","export default \"zxing-scanner {\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2Nhbm5lci9zY2FubmVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3NjYW5uZXIvc2Nhbm5lci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ6eGluZy1zY2FubmVyIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG59Il19 */\";","import { Component, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { BarcodeFormat } from '@zxing/library';\nimport { BehaviorSubject } from 'rxjs';\nimport { AddProductComponent } from '../add-product/add-product.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'scanner.page.html',\n  styleUrls: ['./scanner.page.scss']\n})\nexport class ScannerPage {\n  @Input() modalOpen = false;\n\n  availableDevices: MediaDeviceInfo[];\n  currentDevice: MediaDeviceInfo = null;\n\n  formatsEnabled: BarcodeFormat[] = [\n    BarcodeFormat.CODE_128,\n    BarcodeFormat.DATA_MATRIX,\n    BarcodeFormat.EAN_13,\n    BarcodeFormat.QR_CODE,\n  ];\n  hasDevices: boolean;\n  hasPermission: boolean;\n\n  qrResultString: string;\n\n  tryHarder = true;\n\n  modal: HTMLIonModalElement = null;\n\n\n  constructor(public modalController: ModalController) {\n    \n  }\n  async generateModal() {\n    if(this.modalOpen === false) {\n      this.modalOpen = true;\n      this.modal = await this.modalController.create({\n        component: AddProductComponent,\n        componentProps: { \n          code: this.qrResultString\n        }\n      });\n      await this.modal.present();\n      let { data } = await this.modal.onWillDismiss();\n      // console.log(data);\n      this.modalOpen = false;\n    }\n  }\n\n  clearResult(): void {\n    this.qrResultString = null;\n  }\n\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\n    this.availableDevices = devices;\n    this.hasDevices = Boolean(devices && devices.length);\n  }\n\n  onCodeResult(resultString: string) {\n    this.qrResultString = resultString;\n    this.generateModal();\n  }\n\n  onDeviceSelectChange(selected: string) {\n    const device = this.availableDevices.find(x => x.deviceId === selected);\n    this.currentDevice = device || null;\n    console.log(\"new device\", device)\n  }\n\n  onHasPermission(has: boolean) {\n    this.hasPermission = has;\n  }\n\n  openInfoDialog() {\n    const data = {\n      hasDevices: this.hasDevices,\n      hasPermission: this.hasPermission,\n    };\n\n    // this._dialog.open(AppInfoDialogComponent, { data });\n  }\n  toggleTryHarder(): void {\n    this.tryHarder = !this.tryHarder;\n  }\n}\n"]}